name: test

on:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/test.yml'

jobs:
  build:
    runs-on: ubuntu-18.04
#    if: github.event.sender.id == 45143996
    
    steps:
    - name: Clone Repository
      uses: actions/checkout@v1
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons
        wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/
        
        git clone -b master https://git.openwrt.org/openwrt/openwrt.git openwrt
        cd openwrt
        echo -e '\nsrc-git lienol https://github.com/Lienol/openwrt-package' >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Make Download
      run: |
        df -h
        cd openwrt
        make download -j10
    - name: Make Toolchain
      run: |
        df -h
        cd openwrt
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=s
    - name: hello world
      env:
        WORKFLOW_SCKEY: ${{ secrets.workflow_sckey }}
        WAIT_TO_CONNSSH: "yes"
      run: |
        bash /tmp/send_tmate_session.sh "R2S-Test-"
