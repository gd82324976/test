name: test

on:
  push:
    branches: 
      - master
    paths:
      - 'send_tmate_session.sh'
      - '.github/workflows/test.yml'

jobs:
  build:
    runs-on: ubuntu-18.04
#    if: github.event.sender.id == 45143996
    
    steps:
    - name: Clone Repository
      uses: actions/checkout@v1
    - name: hello world
      env:
        WORKFLOW_SCKEY: ${{ secrets.workflow_sckey }}
      run: |
        bash ./send_tmate_session.sh "R2S-Lean_Plus-" &
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        if [ "`shopt dotglob | awk -F ' ' '{print $2}'`" == "on" ]; then
          mv -f ./* /tmp/
        else
          shopt -s dotglob
          mv -f ./* /tmp/
          shopt -u dotglob
        fi
        git clone https://github.com/project-openwrt/R2S-OpenWrt.git ./
        
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons
        wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        cp -af ./ ./artifact/
        cd openwrt
        cd ..
        zip -r artifact.zip ./artifact/
        zip -r tmp.zip /tmp/
        release_tag="R2S-GC404-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"
    - name: Upload Artifact
      uses: actions/upload-artifact@main
      with:
        name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM
        path: ./artifact.zip, ./tmp.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.workflow_token }}
      with:
        tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.workflow_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./artifact.zip, ./tmp.zip
        asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip, ./tmp.zip
        asset_content_type: application/zip
